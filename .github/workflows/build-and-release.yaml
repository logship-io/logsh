on:
  push:
    tags: ['v*.*.*']
    branches: [main, master]
  pull_request:
    branches: [main, master]

name: Logsh CLI Build and Release

jobs:
  build:
    strategy:
      matrix:
        include:
          # Linux x86_64
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
          # macOS Intel
          - os: macos-13
            target: x86_64-apple-darwin
          # macOS Apple Silicon
          - os: macos-latest
            target: aarch64-apple-darwin
          # Windows x86_64
          - os: windows-latest
            target: x86_64-pc-windows-msvc
    name: Build and Package (${{ matrix.target }})
    runs-on: ${{ matrix.os }}
    env:
      PROJECT_NAME_UNDERSCORE: logsh
    steps:
      - uses: actions/checkout@v4

      - name: Inject Tag Version
        if: startsWith(github.ref, 'refs/tags/v')
        shell: pwsh
        run: |
          $Env:GIT_VERSION = $Env:GITHUB_REF -replace 'refs/.*/v', ''
          (Get-Content ./logsh/Cargo.toml) -replace '^version\s+=\s+"([0-9\.]+)"\s*$', "version = `"$($Env:GIT_VERSION)`"" | Out-File ./logsh/Cargo.toml
          echo "Version should be $($Env:GIT_VERSION)"
          echo "----------------------------------------"
          cat ./logsh/Cargo.toml

      - uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: stable
          targets: ${{ matrix.target }}
      
      - name: Build
        run: cargo build --release --target ${{ matrix.target }}
        working-directory: ./logsh
      
      - name: 'Upload Artifact'
        uses: actions/upload-artifact@v4
        with:
          name: logsh-cli-${{ matrix.target }}
          path: |
            logsh/target/${{ matrix.target }}/release/${{ env.PROJECT_NAME_UNDERSCORE }}
            logsh/target/${{ matrix.target }}/release/${{ env.PROJECT_NAME_UNDERSCORE }}.exe

  prerelease:
    name: Create pre-release
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts
      
      - name: Create pre-release
        uses: marvinpinto/action-automatic-releases@latest
        with:
          repo_token: "${{ secrets.GITHUB_TOKEN }}"
          automatic_release_tag: "latest-pre"
          prerelease: true
          title: "Development Build"
          files: |
            artifacts/**/*

  release:
    name: Create release
    if: startsWith(github.ref, 'refs/tags/v')
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts
      
      - name: Create release
        uses: softprops/action-gh-release@v1
        with:
          files: artifacts/**/*
          generate_release_notes: true