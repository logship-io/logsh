on:
  push:
    tags:
      - 'v*' # Push events to matching v*, i.e. v1.0, v20.15.10

name: Logsh CLI Build and Publish

jobs:
  build:
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]
    name: Release Packaging
    runs-on: ${{ matrix.os }}
    env:
      PROJECT_NAME_UNDERSCORE: logsh
    steps:
      - uses: actions/checkout@v2

      - name: Inject Tag Version
        run: |
          sudo apt-get install -y sed
          export GIT_VERSION=${GITHUB_REF#refs/*/v}
          export SEARCH_PAT="s/^\(version[[:space:]]\{1,\}=[[:space:]]\{1,\}\)\"\([0-9]\{1,\}\.\)\{1,\}\([0-9]\)\{1,\}\"/version = \"$GIT_VERSION\"/"
          sed -i "$SEARCH_PAT" ./logsh/Cargo.toml
          echo "Version should be ${GITHUB_REF#refs/*/v}"
          echo "----------------------------------------"
          cat ./logsh/Cargo.toml

      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
      - name: Release Build
        run: cargo build --release
        working-directory: ./logsh
      - name: 'Upload Artifact'
        uses: actions/upload-artifact@v2
        with:
          name: logsh-cli
          path: |
            logsh/target/release/${{ env.PROJECT_NAME_UNDERSCORE }}
            logsh/target/release/${{ env.PROJECT_NAME_UNDERSCORE }}.exe
  upload:
    name: Create release and upload
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false
      - name: Downloading artifacts
        uses: actions/download-artifact@v3
        if: startsWith(github.ref, 'refs/tags/')
        with:
          name: logsh-cli
          path: logsh-cli
      - name: Generate Changelog
        run: git log $(git describe --tags --abbrev=0 HEAD^)..HEAD > ${{ github.workspace }}-CHANGELOG.txt
      - name: Upload Artifact
        id: upload-release-asset
        if: startsWith(github.ref, 'refs/tags/')
        uses: softprops/action-gh-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          body_path: ${{ github.workspace }}-CHANGELOG.txt
          files: logsh-cli/*